
package kahonen;


public class Kohonen {
    //Driver Program for SOM
    public static void main(String[] args) {
        double[][] squares = {
            //square one sparsely populated
            {1,1},{2,1},{3,1},{4,1},{5,1},
            {1,2},{2,2},{3,2},{4,2},{5,2},
            {1,3},{2,3},{3,3},{4,3},{5,3},    
            {1,4},{2,4},{3,4},{4,4},{5,4},    
            {1,5},{2,5},{3,5},{4,5},{5,5},

            //square two densely populated
            {7,2.75},{7,2.875},{7,3},{7,3.125},{7,3.25},
            {7.125,2.75},{7.125,2.875},{7.125,3},{7.125,3.125},{7.125,3.25},
            {7.25,2.75},{7.25,2.875},{7.25,3},{7.25,3.125},{7.25,3.25},
            {7.375,2.75},{7.375,2.875},{7.375,3},{7.375,3.125},{7.375,3.25},
            {7.5,2.75},{7.5,2.875},{7.5,3},{7.5,3.125},{7.5,3.25}
        };
        
        double[][] spirals = {
            //spiral one
            {0,7},{0.5,7},{1,7},{1.5,7},{2,7},{2.5,7},{3,7},{3.5,7},{4,7},{4.5,7},{5,7},{5.5,7},{6,7},{6.5,7},{7,7},
            {7,6.5},{7,6},{7,5.5},{7,5},{7,4.5},{7,4},{7,3.5},{7,3},{7,2.5},{7,2},{7,1.5},{7,1},
            {6.5,1},{6,1},{5.5,1},{5,1},{4.5,1},{4,1},{3.5,1},{3,1},{2.5,1},{2,1},{1.5,1},{1,1},
            {1,1.5},{1,2},{1,2.5},{1,3},{1,3.5},{1,4},{1,4.5},{1,5},
            {1.5,5},{2,5},{2.5,5},{3,5},{3.5,5},{4,5},{4.5,5},{5,5},
            {5,4.5},{5,4},{5,3.5},{5,3},
            {4.5,3},{4,3},{3.5,3},{3,3},
            
            //spiral two
            {7,0},{6.5,0},{6,0},{5.5,0},{5,0},{4.5,0},{4,0},{3.5,0},{3,0},{2.5,0},{2,0},{1.5,0},{1,0},{0.5,0},{0,0},
            {0,0.5},{0,1},{0,1.5},{0,2},{0,2.5},{0,3},{0,3.5},{0,4},{0,4.5},{0,5},{0,5.5},{0,6},
            {0.5,6},{1,6},{1.5,6},{2,6},{2.5,6},{3,6},{3.5,6},{4,6},{4.5,6},{5,6},{5.5,6},{6,6},
            {6,5.5},{6,5},{6,4.5},{6,4},{6,3.5},{6,3},{6,2.5},{6,2},
            {5.5,2},{5,2},{4.5,2},{4,2},{3.5,2},{3,2},{2.5,2},{2,2},
            {2,2.5},{2,3},{2,3.5},{2,4},
            {2.5,4},{3,4},{3.5,4},{4,4}
        };
        
        ExcelWriter xcl = new ExcelWriter();
        
        SOM som = new SOM(20);
        som.train(spirals, 500000, 1, 2, true, true);
        xcl.read(som.getWeights());
        xcl.write("SOM_spirals_20n");
        
//        xcl.read(squares);
//        xcl.write("_SQUARES_");
//        xcl.read(spirals);
//        xcl.write("_SPIRALS_");
        
    }
    
}